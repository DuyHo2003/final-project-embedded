import RPi.GPIO as GPIO
import time

# Set the GPIO mode
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

# Define GPIO pins
TRIG = 10
ECHO = 9
SERVO = 11
RELAY = 18

# Setup GPIO pins
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)
GPIO.setup(SERVO, GPIO.OUT)
GPIO.setup(RELAY, GPIO.OUT)

# Setup PWM on the servo pin
servo = GPIO.PWM(SERVO, 50)  # 50Hz PWM frequency
servo.start(0)

def distance():
    # Ensure the trigger pin is set low
    GPIO.output(TRIG, False)
    time.sleep(2)

    # Send a 10us pulse to trigger
    GPIO.output(TRIG, True)
    time.sleep(0.00001)
    GPIO.output(TRIG, False)

    # Wait for the echo to be received
    while GPIO.input(ECHO) == 0:
        pulse_start = time.time()

    while GPIO.input(ECHO) == 1:
        pulse_end = time.time()

    # Calculate the pulse duration
    pulse_duration = pulse_end - pulse_start

    # Calculate the distance (speed of sound is 34300 cm/s)
    distance = pulse_duration * 17150
    distance = round(distance, 2)

    return distance

def set_servo_angle(angle):
    duty_cycle = angle / 18 + 2
    GPIO.output(SERVO, True)
    servo.ChangeDutyCycle(duty_cycle)
    time.sleep(1)
    GPIO.output(SERVO, False)
    servo.ChangeDutyCycle(0)

try:
    while True:
        dist = distance()
        print(f"Distance: {dist} cm")

        if dist < 10:
            set_servo_angle(90)
        else:
            set_servo_angle(0)

        if dist > 30:
            GPIO.output(RELAY, GPIO.HIGH)  # Turn on the relay (water pump)
        else:
            GPIO.output(RELAY, GPIO.LOW)  # Turn off the relay (water pump)

        time.sleep(0.5)

except KeyboardInterrupt:
    print("Measurement stopped by user")
    GPIO.cleanup()
    servo.stop()
